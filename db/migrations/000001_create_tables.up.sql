create table if not exists users (
	id         varchar(255) primary key,
	email      text not null,
	created_at timestamp not null default (now() at time zone 'utc'),
	updated_at timestamp not null default (now() at time zone 'utc')
);

create table if not exists api_keys (
	id          varchar(64) primary key,
	hash        text not null,
	user_id     varchar(255) not null,
	created_at  timestamp not null default (now() at time zone 'utc'),
	constraint fk_api_keys_user_id
		foreign key (user_id)
		references users (id)
		on delete cascade,
	constraint uq_api_keys_hash
		unique (hash)
);

create table if not exists domains (
	id            int primary key generated by default as identity,
	domain_name   text not null,
	issued_by     text,
	dns_names     text,
	ip_address    text,
	signature     text,
	status        int not null default 0,
	expires_at    timestamp,
	checked_at    timestamp,
	latency       int,
	error_message text,
	created_at    timestamp not null default (now() at time zone 'utc'),
	updated_at    timestamp not null default (now() at time zone 'utc'),
	constraint uq_domains_domain_name unique (domain_name)
);
create index idx_domains_expires_at on domains(expires_at);
create index idx_domains_domain_name on domains(domain_name);

create table if not exists user_domains (
	id        int primary key generated always as identity,
	user_id   varchar(255) not null,
	domain_id int not null,
	constraint fk_notifications_user_id
		foreign key (user_id)
		references users (id)
		on delete cascade,
	constraint fk_notifications_domain_id
		foreign key (domain_id)
		references domains (id)
		on delete cascade,
	constraint uq_user_domains_user_id_domain_id
		unique (user_id, domain_id)
);
create index idx_user_domains_user_id on user_domains(user_id);
create index idx_user_domains_domain_id on user_domains(domain_id);

create table if not exists settings (
	id            int primary key generated by default as identity,
	user_id       varchar(255) not null,
	webhook_url   text not null,
	remind_before int not null,
	constraint fk_settings_user_id
		foreign key (user_id)
		references users (id)
		on delete cascade,
	constraint uq_settings_user_id
		unique (user_id)
);

create table if not exists notifications (
	id                int primary key generated by default as identity,
	user_id           varchar(255) not null,
	domain_id         int not null,
	notification_type int not null,
	body              text not null,
	due               timestamp not null,
	delivered_at      timestamp,
	attempts          int not null default 0,
	deleted_after     timestamp not null,
	created_at        timestamp not null default (now() at time zone 'utc'),
	constraint fk_notifications_user_id
		foreign key (user_id)
		references users (id)
		on delete cascade,
	constraint fk_notifications_domain_id
		foreign key (domain_id)
		references domains (id)
		on delete cascade,
	constraint uq_notifications_domain_id_due
		unique (domain_id, due)
);
create index idx_notifications_user_id on notifications(user_id);
create index idx_notifications_due on notifications(due);
create index idx_notifications_delivered_at on notifications(delivered_at);
